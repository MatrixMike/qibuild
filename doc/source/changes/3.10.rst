v3.10
======
qibuild
--------

* Include test dependencies in ``<build>/dependencies.cmake``
  This allows you to declare ``gtest`` as a ``testtime`` dependency only.
  (No need for it to be a ``buildtime`` dependency)
* Fix using ``qibuild make-host-tools --release`` and other similar
  build or configure options.
* Add ``qibuild get-licenses`` to get the licenses used by the project.
  In order to work, there should be a ``<license>`` tag in the ``qiproject.xml``
  or the ``qipackage.xml`` file, like this:

  .. code-block:: xml

    <!-- in package.xml -->
    <package name="foo" version="0.1">
      <license>BSD</license>
    </package>

    <!-- in qiproject.xml -->
    <project version="3">
      <license>proprietary</license>
      <qibuild name="foo" />
    </project>

qidoc
-----

* Add support for translating ``sphinx`` doc projects. See :ref:`qidoc-tutorial`
  for details.

qipy
-----

* ``qipy bootstrap``: prettier output
* ``qipy bootstrap``: add ``--no-site-packages``
* ``qipy bootstrap``: add ``-p, --python`` to create a ``virtualenv`` with
  a custom interpreter

qisrc
-----

* Fix using relative paths with ``qisrc init``
* ``qisrc push``: When the project is not under code review,
  warn and ask the user if he is sure before running ``git push``.
  You can use the ``-y`` option to disable this check.
* ``qisrc push`` can now only be used on one git project.
  (Previously you could run ``qisrc push --all``, but that was
  deemed to dangerous)
* ``qisrc push``: project arguments are no longer positional.
  This means you should use ``qisrc push --project foo`` instead
  of ``qisrc push foo``
* ``qisrc push`` displays reviewers before notifying them.
* Fix using ``qisrc checkout`` after ``qisrc init --no-review``
* ``qisrc status`` displays commits ahead/behind even when a project is dirty.
* ``qisrc rm-group``: fix when trying to remove a default group

qitoolchain
-----------

* ``qitoolchain convert-package``: Properly raises an ``NotImplementedError``
  when used with an ``.rpm`` file
* Fix bug when a package is both listed as a normal package and as a
  subversion package in the feed.
* Read package metadata from ``package.xml``, not the feed.
  This makes it possible to use cross-toolchains packages or packages that
  set compile flags without a feed.
* Add ``qitoolchain svn-status`` to display status of subversion packages
  in the given toolchain

cmake
-----

* ``qi_stage_lib``: do not call ``find_library`` in the generated
  ``-config.cmake`` files
* Add ``Qt5Svg``
* ``qt5-tools``: fix some bugs occurring during cross-compilation
* ``qi_generate_qt_conf``: only set ``Plugins``, ``Qml2Imports`` ``Translations``, not
  ``Prefix``
